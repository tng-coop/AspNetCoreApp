@page "/"
@page "/{Tenant}/"
@page "/_cms/{CategorySlug}"
@page "/{Tenant}/_cms/{CategorySlug}"
@page "/_cms/{CategorySlug}/{ArticleSlug}"
@page "/{Tenant}/_cms/{CategorySlug}/{ArticleSlug}"
@using BlazorWebApp.Models
@using BlazorWebApp.Services
@using BlazorWebApp.Utils
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization
@inject ICategoryService CategoryService
@inject IPublicationService PublicationService
@inject NavigationManager Nav

@{
    if (displayPublication)
    {
        if (pub == null)
        {
            <p><em>Publication not found.</em></p>
        }
        else
        {
            <h1>@pub.Title</h1>

            @if (!string.IsNullOrEmpty(fullArticlePath))
            {
                <p class="text-muted mb-4">
                    <small>Category: @fullArticlePath</small>
                </p>
            }

            <!-- direct HTML render, styled by TinyMCE's content CSS -->
            <p>MCE03</p>
            <div class="mce-content-body">
                @((MarkupString)pub.Html)
            </div>

            <p><small>Created: @pub.CreatedAt:f</small></p>

            @if (pub.PublishedAt.HasValue)
            {
                <p><small>Published: @pub.PublishedAt.Value:f</small></p>
            }

            <AuthorizeView Roles="Admin">
                <div class="mt-3">
                    <button class="btn btn-secondary" @onclick="SetAsDraft">
                        Set as Draft
                    </button>
                </div>
            </AuthorizeView>

            <div class="mt-4">
                <NavLink href="@CmsRoutes.Combine(pub?.CategorySlug)" Match="NavLinkMatch.Prefix">
                    Back to @pub?.CategoryName
                </NavLink>
            </div>
        }
    }
    else
    {
        if (category == null)
        {
            <h2>Category not found</h2>
        }
        else
        {
            if (primaryPost != null)
            {
                <article class="mb-4">
                    <div class="mt-3 mce-content-body">
                        @((MarkupString)GetFirstParagraph(primaryPost.Html))
                    </div>
                    <h5>
                        <NavLink href="@CmsRoutes.Combine(CategorySlug, primaryPost.Slug)" Match="NavLinkMatch.Prefix">
                            @primaryPost.Title
                        </NavLink>
                    </h5>
                    <small class="text-muted">@primaryPost.PublishedAt?.ToString("f")</small>
                    <p>MCE01</p>
                </article>
            }
            if (subcats.Any())
            {
                <h4>Sub-categories</h4>
                <ul class="list-inline">
                    @foreach (var sub in subcats)
                    {
                        <li class="list-inline-item">
                            <NavLink class="btn btn-outline-primary btn-sm" href="@CmsRoutes.Combine(sub.Slug)" Match="NavLinkMatch.Prefix">
                                @sub.Name
                            </NavLink>
                        </li>
                    }
                </ul>
            }

            if (otherPosts.Any())
            {
                <h4>Other Articles in this category</h4>
                <ul class="list-unstyled">
                    @foreach (var p in otherPosts)
                    {
                        <li class="mb-2">
                            <NavLink href="@CmsRoutes.Combine(CategorySlug, p.Slug)" Match="NavLinkMatch.Prefix">
                                <strong>@p.Title</strong>
                            </NavLink>
                            <small class="text-muted ms-2">@p.PublishedAt?.ToString("g")</small>
                        </li>
                    }
                </ul>
            }
        }
    }

}
@page "/editor"
@rendermode InteractiveServer

@using Microsoft.JSInterop
@inject IJSRuntime JS

<h3>Summernote Editor Test</h3>

<div class="form-group">
  <label for="summernote">Content</label>
  <textarea id="summernote"></textarea>
</div>

<button class="btn btn-primary" @onclick="ShowContentSize">
  Show Content Size
</button>

@if (contentSize >= 0)
{
  <div class="mt-2">
    <strong>Content length:</strong> @contentSize characters
  </div>
}

@code {
    private int contentSize = -1;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;

        // Dynamically load CSS/JS in sequence, then initialize Summernote
        var loader = @"
            (function() {
                return new Promise(function(resolve, reject) {
                    var head = document.head;
                    function loadCSS(href) {
                        var link = document.createElement('link');
                        link.rel = 'stylesheet';
                        link.href = href;
                        head.appendChild(link);
                    }
                    function loadScript(src, onload) {
                        var script = document.createElement('script');
                        script.src = src;
                        script.onload = onload;
                        script.onerror = reject;
                        head.appendChild(script);
                    }

                    // 1) Bootstrap CSS
                    loadCSS('https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css');

                    // 2) jQuery → Bootstrap JS → Summernote CSS → Summernote JS
                    loadScript('https://code.jquery.com/jquery-3.5.1.min.js', function() {
                        loadScript('https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js', function() {
                            loadCSS('https://cdn.jsdelivr.net/npm/summernote@0.9.1/dist/summernote.min.css');
                            loadScript('https://cdn.jsdelivr.net/npm/summernote@0.9.1/dist/summernote.min.js', function() {
                                resolve();
                            });
                        });
                    });
                });
            })()
            .then(function() {
                // Initialize with built-in table button only
                $('#summernote').summernote({
                    placeholder: 'Type here...',
                    tabsize: 2,
                    height: 200,
                    toolbar: [
                        ['style',    ['style']],
                        ['font',     ['bold','underline','clear']],
                        ['color',    ['color']],
                        ['para',     ['ul','ol','paragraph']],
                        ['table',    ['table']],              // ← built-in table group
                        ['insert',   ['link','picture','video']],
                        ['view',     ['fullscreen','codeview','help']]
                    ]
                });
            })
            .catch(function(err) { console.error('Failed to load Summernote assets:', err); });
        ";

        await JS.InvokeVoidAsync("eval", loader);
    }

    private async Task ShowContentSize()
    {
        // Grab the HTML content and measure its length
        contentSize = await JS.InvokeAsync<int>("eval", "$('#summernote').summernote('code').length");
        StateHasChanged();
    }
}

@page "/_cms/editor"
@page "/_cms/editor/{Id:guid}"
@page "/_zzz/_cms/editor"
@page "/_zzz/_cms/editor/{Id:guid}"
@page "/editor"
@page "/editor/{Id:guid}"
@rendermode InteractiveServer

@using TinyMCE.Blazor
@using BlazorWebApp.Models
@using BlazorWebApp.Services
@using Microsoft.AspNetCore.Components.Forms

@inject IPublicationService PublicationService
@inject ICategoryService    CategoryService
@inject NavigationManager   Nav

<h3>
  @(Id == null
      ? "New Publication"
      : (loadedExisting
          ? "Edit Publication"
          : "Unknown Publication – creating new"))
</h3>

<EditForm EditContext="editContext"
          OnValidSubmit="HandleSubmit">
  <DataAnnotationsValidator />
  <ValidationSummary />

  <!-- Category -->
  <div class="mb-3">
    <label class="form-label">Category</label>
    <InputSelect class="form-select" @bind-Value="dto.CategoryId">
      @foreach (var opt in categoryOptions)
      {
        <option value="@opt.Id">@opt.DisplayName</option>
      }
    </InputSelect>
    <ValidationMessage For="@(() => dto.CategoryId)" />
  </div>

  <!-- Title -->
  <div class="mb-3">
    <label class="form-label">Title</label>
    <InputText class="form-control" @bind-Value="dto.Title" @oninput="TitleChanged" />
    <ValidationMessage For="@(() => dto.Title)" />
  </div>

  <!-- Slug -->
  <div class="mb-3">
    <label class="form-label">Slug</label>
    <InputText class="form-control" @bind-Value="dto.Slug" />
    @if (!slugAscii)
    {
        <div class="text-warning"><small>Slug should contain ASCII characters only.</small></div>
    }
  </div>

  <!-- Featured -->
  <div class="form-check mb-3">
    <InputCheckbox class="form-check-input" @bind-Value="dto.IsFeatured" id="isFeatured" />
    <label class="form-check-label" for="isFeatured">Featured</label>
  </div>

  <!-- Featured Order -->
  <div class="mb-3">
    <label class="form-label" for="featuredOrder">Featured Order</label>
    <InputNumber class="form-control" @bind-Value="dto.FeaturedOrder" id="featuredOrder" />
  </div>

  <!-- TinyMCE Editor -->
  <div class="mb-3">
    <label class="form-label">Content</label>
    <TinyMCE.Blazor.Editor
      ApiKey="no-api-key"
      @bind-Value="dto.Html"
      Field="@(() => dto.Html)"
      Conf="@editorConfig" />
    <ValidationMessage For="@(() => dto.Html)" />
  </div>

  <!-- Buttons -->
  <button type="submit" class="btn btn-primary">Save Draft</button>
  <button type="button"
          class="btn btn-success ms-2"
          @onclick="PublishAsync"
          disabled="@(!canPublish)">
    Publish
  </button>
</EditForm>

@if (loadedExisting)
{
  <h4 class="mt-5">Revision History</h4>
  @if (revisions == null)
  {
    <p>Loading revisions…</p>
  }
  else if (!revisions.Any())
  {
    <p><em>No past revisions.</em></p>
  }
  else
  {
    <table class="table table-striped">
      <thead>
        <tr><th>When</th><th>Title</th><th></th></tr>
      </thead>
      <tbody>
        @foreach (var r in revisions)
        {
          <tr>
            <td>@r.CreatedAt.ToString("g")</td>
            <td>@r.Title</td>
            <td>
              <button class="btn btn-sm btn-outline-secondary"
                      @onclick="() => Restore(r.Id)">
                Restore
              </button>
            </td>
          </tr>
        }
      </tbody>
    </table>
  }
}

@page "/editor"
@rendermode InteractiveServer

@using Microsoft.JSInterop
@inject IJSRuntime JS

<h3>Quill Editor Test (v2.0.3) with Table Support</h3>
<div class="form-group">
  <label for="editor">Content</label>
  <div id="editor" style="height:200px; background-color:white;"></div>
</div>

<button class="btn btn-primary" @onclick="ShowContentSize">
  Show Content Size
</button>

@if (contentSize >= 0)
{
  <div class="mt-2">
    <strong>Content length:</strong> @contentSize characters
  </div>
}

@code {
  private int contentSize = -1;
  private IJSObjectReference? quillModule;

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (!firstRender)
      return;

    // import our JS module (once)
    quillModule ??= await JS.InvokeAsync<IJSObjectReference>(
      "import", "./js/quillInterop.js");

    // call its initializeQuill() function
    await quillModule.InvokeVoidAsync("initializeQuill", "#editor");
  }

  private async Task ShowContentSize()
  {
    contentSize = await JS.InvokeAsync<int>(
      "eval",        // still the quickest way to grab window.quill
      "window.quill.getText().trim().length"
    );
    StateHasChanged();
  }
}
